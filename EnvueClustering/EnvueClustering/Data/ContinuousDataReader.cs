using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace EnvueClustering.Data
{
    /// <summary>
    /// Class responsible for handling the loading of continuously structured and evolving data streams.
    /// Understands a small set of predefined continuous data formats. 
    /// </summary>
    public static class ContinuousDataReader
    {
        /// <summary>
        /// Reads the data from a .synthetic file generated by the data generation Processing script.
        /// Returns a List((float[], int)). 
        /// </summary>
        /// <param name="filePath"></param>
        public static ConcurrentQueue<(EuclideanPoint, int)> ReadSyntheticEuclidean(string filePath)
        {
            var result = new List<(EuclideanPoint, int)>();
            foreach (var line in File.ReadLines(filePath))
            {
                var attributes = line.Trim().Split();
                var values = attributes
                    .Take(attributes.Count() - 1)
                    .Select(float.Parse)
                    .ToArray();
                var timeStamp = int.Parse(attributes.Last());
                
                result.Add((new EuclideanPoint(values[0], values[1], timeStamp), timeStamp));
            }

            return new ConcurrentQueue<(EuclideanPoint, int)>(result);
        }
    }
}